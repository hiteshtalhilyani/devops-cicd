#Author : Hitesh Talhilyani

Parameters:
  NameOfService:
    Description: "The name of service this stack is used for."
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - t3.medium
      - t2.small
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: EC2 Login Key.
    Type: AWS::EC2::KeyPair::KeyName

Mappings: 
  AMIRegionMap: 
    us-east-1:
      AMI1: ami-0ff8a91507f77f867
      AMI2: ami-0a584ac55a7631c0c
    us-west-1:
      AMI1: ami-0bdb828fd58c52235
      AMI2: ami-066ee5fd4a9ef77f1
    eu-west-1:
      AMI1: ami-047bb4163c506cd98
      AMI2: ami-0a7c483d527806435
    ap-northeast-1:
      AMI1: ami-06cd52961ce9f0d85
      AMI2: ami-053cdd503598e4a9d
    ap-south-1:
      AMI1: ami-025b4b7b37b743227       # Only this one is correct existing AMI, others need to update
      AMI2: ami-0be9df32ae9f92309

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init: 
        config: 
          packages: 
            yum:
              httpd: []
              php: []
              wget: []
              unzip: []
              git: []
          commands:
            test:
              command: "wget https://www.tooplate.com/zip-templates/2119_gymso_fitness.zip && unzip 2119_gymso_fitness.zip && cp -r 2119_gymso_fitness/* /var/www/html/"
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>

                <h1>Welcome to CloudFormation.</h1>
                <p>This site is deployed by CloudFormation.</p>

                </body>
                </html>
          services:
            sysvinit:
              httpd:
                enabled: true 
                ensureRunning: true

    Properties:
      KeyName: !Ref KeyName
      AvailabilityZone: ap-south-1a
      ImageId: !FindInMap [AMIRegionMap, !Ref "AWS::Region", AMI1]
      InstanceType: !Ref InstanceTypeParameter
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref cfsg
      UserData:
        'Fn::Base64': 
         !Sub |
            #!/bin/bash -xe            
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer  --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer  --region ${AWS::Region}
  cfsg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http to client host
      Tags:
        - Key: "Name"
          Value: "cfsg"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  PrintInfo: 
    Value: !GetAtt
     - WebServer
     - PublicDnsName